[package]
name = "modql"
version = "0.4.1-WIP"
edition = "2021"
authors = ["Jeremy Chone <jeremy.chone@gmail.com>"]
license = "MIT OR Apache-2.0"
description = "Rust implementation for Model Query Language support"
categories = ["data-structures"]
keywords = [
	"query-language",
	"sea-query",
	"model",
	"data-model",
	"graphql"
]
homepage = "https://github.com/jeremychone/rust-modql"
repository = "https://github.com/jeremychone/rust-modql"

[workspace.lints.rust]
unsafe_code = "forbid"
# unused = { level = "allow", priority = -1 } # For exploratory dev.

[lints.rust]
unsafe_code = "forbid"
# unused = { level = "allow", priority = -1 } # For test files (dev)

[workspace]
members = [".", "modql-macros"]

[features]
# default = ["modql-macros", "with-sea-query", "with-rusqlite"] # for dev
default = ["modql-macros"]
with-sea-query = ["sea-query", "modql-macros/with-sea-query"]
with-rusqlite = ["rusqlite", "modql-macros/with-rusqlite"]
with-ilike = ["sea-query/backend-postgres"]

[dependencies]
modql-macros = { version="0.4", path = "modql-macros", optional=true}
serde = { version = "1", features = ["derive"] }
serde_json = "1"

# -- For features
sea-query = { workspace = true, optional = true }
rusqlite = { workspace = true, optional = true }

[workspace.dependencies]
sea-query = { version = "0.32", features = ["thread-safe"] }
rusqlite = { version = "0.32" }

[dev-dependencies]
serde_with = "3"
rusqlite = {version = "0.32", features = ["bundled"]}
sea-query-rusqlite = {version = "0.7"}

